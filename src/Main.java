import taskManager.TaskManager;
import statusInfo.Status;
import tasks.Epic;
import tasks.SubTask;
import tasks.Task;

import java.util.ArrayList;


public class Main {

    public static void main(String[] args) {
        TaskManager manager = new TaskManager();

        System.out.println("Starting the test");
        System.out.println(" ".repeat(20));
        System.out.println("***Work with Tasks***");
        System.out.println(" ".repeat(20));
        System.out.println("Beginning of Task creation");
        System.out.println("----".repeat(20));
        manager.createTask(new Task("Description-1", "Task-1", Status.NEW));
        manager.createTask(new Task("Description-2", "Task-2", Status.NEW));
        System.out.println("Printing all created Tasks");
        manager.printTasks();
        System.out.println("----".repeat(20));
        System.out.println("Printing all created Tasks like list");
        ArrayList<Task> tasks = manager.getAllTasks();
        System.out.println(tasks);
        System.out.println("----".repeat(20));
        System.out.println("Getting the Task by Id");
        System.out.println("----".repeat(20));
        Task task = manager.getTaskById(1);
        System.out.println("Printing the found Task");
        System.out.println(task);
        System.out.println("----".repeat(20));
        System.out.println("Trying to update the Task");
        task.setStatus(Status.IN_PROGRESS);
        manager.updateTask(task);
        System.out.println("----".repeat(20));
        System.out.println("Printing updated Task");
        System.out.println(task);
        System.out.println("----".repeat(20));
        System.out.println(" ".repeat(20));

        System.out.println("***Work with Epics***");
        System.out.println(" ".repeat(20));
        System.out.println("Beginning of Epic creation");
        System.out.println("----".repeat(20));
        manager.createEpic(new Epic("Description-3", "Epic-1"));
        manager.createEpic(new Epic("Description-4", "Epic-2"));
        System.out.println("Printing all created Epics");
        manager.printEpics();
        System.out.println("----".repeat(20));
        System.out.println("Printing all created Epics like list");
        ArrayList<Epic> epics = manager.getAllEpics();
        System.out.println(epics);
        System.out.println("----".repeat(20));
        System.out.println("Trying to get Epic by Id");
        System.out.println("----".repeat(20));
        Epic epic = manager.getEpicById(3);
        System.out.println("Printing the found Epic");
        System.out.println(epic);
        System.out.println("----".repeat(20));
        System.out.println("Trying to update Task");
        epic.setStatus(Status.IN_PROGRESS);
        manager.updateEpic(epic);
        Epic epic3 = manager.getEpicById(4);
        System.out.println("----".repeat(20));
        System.out.println("Printing updated Epic");
        System.out.println(epic3);
        System.out.println("----".repeat(20));
        System.out.println(" ".repeat(20));

        System.out.println("***Work with SubTasks***");
        System.out.println(" ".repeat(20));
        System.out.println("Beginning of SubTask creation");
        System.out.println("----".repeat(20));
        manager.createSubtask(new SubTask("Description-5", "Subtask-1", Status.NEW, 3));
        manager.createSubtask(new SubTask("Description-6", "Subtask-2", Status.NEW, 3));
        manager.createSubtask(new SubTask("Description-7", "Subtask-3", Status.NEW, 4));
        System.out.println("Printing all created Epics");
        manager.printSubtasks();
        System.out.println("----".repeat(20));
        System.out.println("Getting all SubTasks by Epic id");
        ArrayList<SubTask> subtasksByEpicId = manager.getAllSubtasksByEpicId(3);
        System.out.println("Printing the found SubTasks");
        System.out.println(subtasksByEpicId);
        System.out.println("----".repeat(20));
        System.out.println("Getting all SubTasks");
        System.out.println("----".repeat(20));
        ArrayList<SubTask> subtasks = manager.getAllSubtasks();
        System.out.println("Printing the found SubTasks");
        System.out.println(subtasks);
        System.out.println("----".repeat(20));
        System.out.println("Getting SubTasks by id");
        SubTask subtask = manager.getSubtaskById(5);
        System.out.println("Printing the found SubTask");
        System.out.println(subtask);
        System.out.println("----".repeat(20));
        System.out.println("Updating the subtask");
        subtask.setStatus(Status.IN_PROGRESS);
        manager.updateSubtask(subtask);
        System.out.println("Printing updated SubTask");
        System.out.println(subtask);
        System.out.println("----".repeat(20));
        System.out.println(" ".repeat(20));

        System.out.println("***Deleting***");
        System.out.println(" ".repeat(20));
        System.out.println("Deleting Task by id");
        manager.deleteTaskById(1);
        System.out.println("----".repeat(20));
        System.out.println("Printing Task list after delete");
        manager.printTasks();
        System.out.println("----".repeat(20));
        System.out.println("Deleting all tasks");
        manager.deleteAllTasks();
        System.out.println("----".repeat(20));
        System.out.println("Printing Tasks after delete");
        manager.printTasks();
        System.out.println("----".repeat(20));
        System.out.println("Deleting SubTask by id");
        manager.deleteSubtaskById(5);
        System.out.println("----".repeat(20));
        System.out.println("Printing SubTasks after delete");
        manager.printSubtasks();
        System.out.println("----".repeat(20));
        System.out.println("Deleting all subtasks");
        manager.deleteAllSubtasks();
        System.out.println("----".repeat(20));
        System.out.println("Printing SubTasks after delete");
        manager.printSubtasks();
        System.out.println("----".repeat(20));
        System.out.println("Deleting epic by id");
        System.out.println("----".repeat(20));
        manager.deleteEpicById(4);
        System.out.println("Printing Epics after delete");
        manager.printEpics();
        System.out.println("----".repeat(20));
        System.out.println("Deleting all epics");
        manager.deleteAllEpics();
        System.out.println("----".repeat(20));
        System.out.println("Printing Epics after delete");
        manager.printEpics();
        System.out.println("----".repeat(20));
    }
}